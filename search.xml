<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTTP500的错误001</title>
    <url>/2020/03/14/HTTP500/</url>
    <content><![CDATA[<p><img src="/images/innerimage/HttpMessageNotWritableException.png" alt="img"><br><img src="/images/innerimage/HttpMessageNotWritableException2.png" alt="img"></p>
<h2>源代码</h2>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>-spring-mvc -http-500</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫肝了12小时</title>
    <url>/2020/03/10/%E7%88%AC%E8%99%AB%E8%82%9D%E4%BA%8612%E5%B0%8F%E6%97%B6/</url>
    <content><![CDATA[<p>今天属实值得纪念为了一个爬虫从8:30肝到20:30<br>原网址：<a href="https://blog.csdn.net/qq_38898129/article/details/89576581" target="_blank" rel="noopener">https://blog.csdn.net/qq_38898129/article/details/89576581</a><br>源代码：<br>import  requests<br>import time<br>from lxml import etree<br>url = ‘<a href="http://desk.zol.com.cn/dongman/1920x1080/&#39;" target="_blank" rel="noopener">http://desk.zol.com.cn/dongman/1920x1080/&#39;</a></p>
<p>headers = {“Referer”:”Referer: <a href="http://desk.zol.com.cn/dongman/1920x1080/&quot;" target="_blank" rel="noopener">http://desk.zol.com.cn/dongman/1920x1080/&quot;</a>,<br>    “User-Agent”:”Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36”,}</p>
<p>resq = requests.get(url,headers = headers)</p>
<p>print(resq)</p>
<p>html = etree.HTML(resq.text)<br>srcs = html.xpath(“.//img/@src”)</p>
<p>def download_img(url):<br>    imgname = url.split(‘/‘)[-1]<br>    img = requests.get(url, headers = headers)<br>    with open(‘imgs1/‘+imgname,’wb’) as file:<br>        file.write(img.content)<br>        print(url, imgname)</p>
<p>def next_page(url):<br>    res = requests.get(url, headers = headers)<br>    html = etree.HTML(res.text)<br>    srcs = html.xpath(“.//img/@src”)<br>    for i in srcs:<br>        download_img(i)<br>    next_page_link = html.xpath(‘.//a[@id=”pageNext”]/@href’)<br>    return next_page_link</p>
<p>def main():<br>    current_page = 1<br>    next_page_base = ‘<a href="http://desk.zol.com.cn/dongman/1920x1080/&#39;" target="_blank" rel="noopener">http://desk.zol.com.cn/dongman/1920x1080/&#39;</a><br>    next_page_link = html.xpath(‘.//a[@id=”pageNext”]/@href’)<br>    while next_page_link:<br>        current_page=current_page + 1<br>        next_page_link = next_page(next_page_base+str(current_page)+’.html’)<br>        if current_page &gt; 10:<br>            break</p>
<p>if <strong>name</strong> == ‘<strong>main</strong>‘:<br>    main()</p>
<p>本来是比较高质量且通俗易懂的代码了，奈何老师给你整个比你岁数都大的网址，我吐了<br>网址：<a href="http://video.sina.com.cn/movie/category/movie/type/1.html" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/1.html</a><br>肝后代码：<br>import  requests<br>import time<br>from lxml import etree<br>url = ‘<a href="http://video.sina.com.cn/movie/category/movie/type/1.html&#39;" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/1.html&#39;</a></p>
<p>url = ‘<a href="http://video.sina.com.cn/movie/category/movie/type/1.html&#39;" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/1.html&#39;</a><br>headers = {“Referer”: “<a href="http://video.sina.com.cn/movie/category/movie/type/1.html&quot;" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/1.html&quot;</a>,<br>           “User-Agent”: “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.108 Safari/“}<br>resq = requests.get(url,headers = headers)</p>
<p>print(resq)</p>
<p>html = etree.HTML(resq.text)<br>srcs = html.xpath(“//img[@onerror]/@src”)</p>
<p>print(srcs)<br>def download_img(url):<br>    imgname = url.split(‘/‘)[-1]<br>    img = requests.get(url, headers = headers)<br>    with open(‘imgs/‘+imgname,’wb’) as file:<br>        file.write(img.content)<br>        print(url, imgname)</p>
<p>def next_page(url):<br>    res = requests.get(url, headers = headers)<br>    html = etree.HTML(res.text)<br>    srcs = html.xpath(“//img[@onerror]/@src”)<br>    for i in srcs:<br>        download_img(i)<br>    next_page_link = html.xpath(“//img[@onerror]/@src”)<br>    return next_page_link</p>
<p>def main():<br>    current_page = 1<br>    next_page_base = ‘<a href="http://video.sina.com.cn/movie/category/movie/type/&#39;" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/&#39;</a><br>    next_page_link = next_page_base+str(current_page)+’.html’<br>    print(next_page_link)<br>    while next_page_link:<br>        current_page=current_page + 1<br>        next_page_link = next_page(next_page_base+str(current_page)+’.html’)<br>        print(next_page_link)<br>        print(‘xxxxxxxxxxxxxxxxxxxxxxxxxxxxx’)</p>
<p>if <strong>name</strong> == ‘<strong>main</strong>‘:<br>    main()</p>
<p>完结，撒花<br><img src="/images/%E7%88%AC%E8%99%AB.png" alt="cg"></p>
]]></content>
      <tags>
        <tag>-肝 -Python</tag>
      </tags>
  </entry>
  <entry>
    <title>音乐鉴赏环节</title>
    <url>/2020/03/06/%E9%9F%B3%E4%B9%90%E9%89%B4%E8%B5%8F%E7%8E%AF%E8%8A%82/</url>
    <content><![CDATA[<p>卫庄赤练撒糖</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=525258051&auto=0&height=66"></iframe>]]></content>
  </entry>
  <entry>
    <title>爱情公寓5机密档案</title>
    <url>/2020/03/06/%E7%88%B1%E6%83%85%E5%85%AC%E5%AF%935%E6%9C%BA%E5%AF%86%E6%A1%A3%E6%A1%88/</url>
    <content><![CDATA[<p>彩蛋在此</p>
<iframe width="100%" height="500" src="//player.bilibili.com/player.html?aid=89896157&cid=153527096&page=1" scrolling="yes" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<iframe width="100%" height="500" src="//player.bilibili.com/player.html?aid=89896157&cid=153527236&page=2" scrolling="yes" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
  </entry>
  <entry>
    <title>成果也是诸葛大力</title>
    <url>/2020/03/04/%E6%88%90%E6%9E%9C%E4%B9%9F%E6%98%AF%E8%AF%B8%E8%91%9B%E5%A4%A7%E5%8A%9B/</url>
    <content><![CDATA[<p>还是得用Markdown的语法插入图片啊</p>
<p><img src="/images/guoguo.jpg" alt="cg"></p>
<p>再插入一张<br><img src="/images/guoguo2.jpg" alt="cg"></p>
<p>下次发横屏</p>
<p>想到一个办法<br><img src="/images/guoguo4.jpg" alt="cg"></p>
]]></content>
      <categories>
        <category>-银河 -太阳系 -地球</category>
      </categories>
      <tags>
        <tag>-女神 -演员 -爱情公寓5</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
