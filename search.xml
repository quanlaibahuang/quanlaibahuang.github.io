<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MyBatis：一对多、多对一处理</title>
    <url>/2020/03/19/MyBatis%EF%BC%9A%E4%B8%80%E5%AF%B9%E5%A4%9A%E3%80%81%E5%A4%9A%E5%AF%B9%E4%B8%80%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h2>多对一的处理</h2>
多对一的理解：

<p>多个学生对应一个老师<br>如果对于学生这边，就是一个多对一的现象，即从学生这边关联一个老师！</p>
<h3 id="shujuku">数据库设计</h3>

<p><img src="/images/innerimage/MybatisImage/319001.png" alt="cg"></p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `teacher` (</span><br><span class="line">  `id` INT(10) NOT NULL,</span><br><span class="line">  `name` VARCHAR(30) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=INNODB DEFAULT CHARSET=utf8</span><br><span class="line"></span><br><span class="line">INSERT INTO teacher(`id`, `name`) VALUES (1, <span class="string">'秦老师'</span>); </span><br><span class="line"></span><br><span class="line">CREATE TABLE `student` (</span><br><span class="line">  `id` INT(10) NOT NULL,</span><br><span class="line">  `name` VARCHAR(30) DEFAULT NULL,</span><br><span class="line">  `tid` INT(10) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `fktid` (`tid`),</span><br><span class="line">  CONSTRAINT `fktid` FOREIGN KEY (`tid`) REFERENCES `teacher` (`id`)</span><br><span class="line">) ENGINE=INNODB DEFAULT CHARSET=utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">'1'</span>, <span class="string">'小明'</span>, <span class="string">'1'</span>); </span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">'2'</span>, <span class="string">'小红'</span>, <span class="string">'1'</span>); </span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">'3'</span>, <span class="string">'小张'</span>, <span class="string">'1'</span>); </span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">'4'</span>, <span class="string">'小李'</span>, <span class="string">'1'</span>); </span><br><span class="line">INSERT INTO `student` (`id`, `name`, `tid`) VALUES (<span class="string">'5'</span>, <span class="string">'小王'</span>, <span class="string">'1'</span>);</span><br></pre></td></tr></table></figure>

<h3  id="dajiance">搭建测试环境</h3>
【Lombok的使用】

<p>1.IDEA安装Lombok插件<br>2.引入Maven依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.16.10&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>3.在代码中增加注解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Data //GET,SET,ToString，有参，无参构造</span><br><span class="line">public class Teacher &#123;</span><br><span class="line">    private int id;</span><br><span class="line">    private String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class Student &#123;</span><br><span class="line">    private int id;</span><br><span class="line">    private String name;</span><br><span class="line">    //多个学生可以是同一个老师，即多对一</span><br><span class="line">    private Teacher teacher;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.编写实体类对应的Mapper接口 【两个】</p>
<p>无论有没有需求，都应该写上，以备后来之需！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public interface StudentMapper &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public interface TeacherMapper &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.编写Mapper接口对应的 mapper.xml配置文件 【两个】</p>
<p>无论有没有需求，都应该写上，以备后来之需！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.kuang.mapper.StudentMapper"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.kuang.mapper.TeacherMapper"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<h3 id="anchaxun">按查询嵌套处理</h3>

<p>1.给StudentMapper接口增加方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//获取所有学生及对应老师的信息</span><br><span class="line">public List&lt;Student&gt; getStudents();</span><br></pre></td></tr></table></figure>

<p>2.编写对应的Mapper文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.kuang.mapper.StudentMapper"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">    需求：获取所有学生及对应老师的信息</span><br><span class="line">    思路：</span><br><span class="line">        1. 获取所有学生的信息</span><br><span class="line">        2. 根据获取的学生信息的老师ID-&gt;获取该老师的信息</span><br><span class="line">        3. 思考问题，这样学生的结果集中应该包含老师，该如何处理呢，数据库中我们一般使用关联查询？</span><br><span class="line">            1. 做一个结果集映射：StudentTeacher</span><br><span class="line">            2. StudentTeacher结果集的类型为 Student</span><br><span class="line">            3. 学生中老师的属性为teacher，对应数据库中为tid。</span><br><span class="line">               多个 [1,...）学生关联一个老师=&gt; 一对一，一对多</span><br><span class="line">            4. 查看官网找到：association – 一个复杂类型的关联；使用它来处理关联查询</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;select id=<span class="string">"getStudents"</span> resultMap=<span class="string">"StudentTeacher"</span>&gt;</span><br><span class="line">      select * from student</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;resultMap id=<span class="string">"StudentTeacher"</span> <span class="built_in">type</span>=<span class="string">"Student"</span>&gt;</span><br><span class="line">        &lt;!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名--&gt;</span><br><span class="line">        &lt;association property=<span class="string">"teacher"</span>  column=<span class="string">"tid"</span> javaType=<span class="string">"Teacher"</span> select=<span class="string">"getTeacher"</span>/&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    这里传递过来的id，只有一个属性的时候，下面可以写任何值</span><br><span class="line">    association中column多参数配置：</span><br><span class="line">        column=<span class="string">"&#123;key=value,key=value&#125;"</span></span><br><span class="line">        其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;select id=<span class="string">"getTeacher"</span> resultType=<span class="string">"teacher"</span>&gt;</span><br><span class="line">        select * from teacher <span class="built_in">where</span> id = <span class="comment">#&#123;id&#125;</span></span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<p>3.编写完毕去Mybatis配置文件中，注册Mapper！<br>4.注意点说明：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;resultMap id=<span class="string">"StudentTeacher"</span> <span class="built_in">type</span>=<span class="string">"Student"</span>&gt;</span><br><span class="line">    &lt;!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名--&gt;</span><br><span class="line">    &lt;association property=<span class="string">"teacher"</span>  column=<span class="string">"&#123;id=tid,name=tid&#125;"</span> javaType=<span class="string">"Teacher"</span> select=<span class="string">"getTeacher"</span>/&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">这里传递过来的id，只有一个属性的时候，下面可以写任何值</span><br><span class="line">association中column多参数配置：</span><br><span class="line">    column=<span class="string">"&#123;key=value,key=value&#125;"</span></span><br><span class="line">    其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。</span><br><span class="line">--&gt;</span><br><span class="line">&lt;select id=<span class="string">"getTeacher"</span> resultType=<span class="string">"teacher"</span>&gt;</span><br><span class="line">    select * from teacher <span class="built_in">where</span> id = <span class="comment">#&#123;id&#125; and name = #&#123;name&#125;</span></span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>

<p>5.测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void <span class="function"><span class="title">testGetStudents</span></span>()&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    StudentMapper mapper = session.getMapper(StudentMapper.class);</span><br><span class="line"></span><br><span class="line">    List&lt;Student&gt; students = mapper.getStudents();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Student student : students)&#123;</span><br><span class="line">        System.out.println(</span><br><span class="line">                <span class="string">"学生名:"</span>+ student.getName()</span><br><span class="line">                        +<span class="string">"\t老师:"</span>+student.getTeacher().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="qiantao">按结果嵌套处理</h3>
除了上面这种方式，还有其他思路吗？

<p>我们还可以按照结果进行嵌套处理；<br>1.接口方法编写</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public List&lt;Student&gt; getStudents2();</span><br></pre></td></tr></table></figure>

<p>2.编写对应的mapper文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">按查询结果嵌套处理</span><br><span class="line">思路：</span><br><span class="line">    1. 直接查询出结果，进行结果集的映射</span><br><span class="line">--&gt;</span><br><span class="line">&lt;select id=<span class="string">"getStudents2"</span> resultMap=<span class="string">"StudentTeacher2"</span> &gt;</span><br><span class="line">    select s.id sid, s.name sname , t.name tname</span><br><span class="line">    from student s,teacher t</span><br><span class="line">    <span class="built_in">where</span> s.tid = t.id</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;resultMap id=<span class="string">"StudentTeacher2"</span> <span class="built_in">type</span>=<span class="string">"Student"</span>&gt;</span><br><span class="line">    &lt;id property=<span class="string">"id"</span> column=<span class="string">"sid"</span>/&gt;</span><br><span class="line">    &lt;result property=<span class="string">"name"</span> column=<span class="string">"sname"</span>/&gt;</span><br><span class="line">    &lt;!--关联对象property 关联对象在Student实体类中的属性--&gt;</span><br><span class="line">    &lt;association property=<span class="string">"teacher"</span> javaType=<span class="string">"Teacher"</span>&gt;</span><br><span class="line">        &lt;result property=<span class="string">"name"</span> column=<span class="string">"tname"</span>/&gt;</span><br><span class="line">    &lt;/association&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br></pre></td></tr></table></figure>

<p>3.去mybatis-config文件中注入【此处应该处理过了】<br>4.测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void <span class="function"><span class="title">testGetStudents2</span></span>()&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    StudentMapper mapper = session.getMapper(StudentMapper.class);</span><br><span class="line"></span><br><span class="line">    List&lt;Student&gt; students = mapper.getStudents2();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Student student : students)&#123;</span><br><span class="line">        System.out.println(</span><br><span class="line">                <span class="string">"学生名:"</span>+ student.getName()</span><br><span class="line">                        +<span class="string">"\t老师:"</span>+student.getTeacher().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="xiaojie">小结</h3>
按照查询进行嵌套处理就像SQL中的子查询
按照结果进行嵌套处理就像SQL中的联表查询

<h2 id="yiduiduo">一对多的处理</h2>
一对多的理解：

<p>一个老师拥有多个学生<br>如果对于老师这边，就是一个一对多的现象，即从一个老师下面拥有一群学生（集合）！</p>
<h3 id="shitilei">实体类编写</h3>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class Student &#123;</span><br><span class="line">    private int id;</span><br><span class="line">    private String name;</span><br><span class="line">    private int tid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Data </span><br><span class="line">public class Teacher &#123;</span><br><span class="line">    private int id;</span><br><span class="line">    private String name;</span><br><span class="line">    //一个老师多个学生</span><br><span class="line">    private List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>….. 和之前一样，搭建测试的环境！</p>
<h3 id="anjieguo2">按结果嵌套处理</h3>
1.TeacherMapper接口编写方法

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//获取指定老师，及老师下的所有学生</span><br><span class="line">public Teacher getTeacher(int id);</span><br></pre></td></tr></table></figure>

<p>2.编写接口对应的Mapper配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;mapper namespace=<span class="string">"com.kuang.mapper.TeacherMapper"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">    思路:</span><br><span class="line">        1. 从学生表和老师表中查出学生id，学生姓名，老师姓名</span><br><span class="line">        2. 对查询出来的操作做结果集映射</span><br><span class="line">            1. 集合的话，使用collection！</span><br><span class="line">                JavaType和ofType都是用来指定对象类型的</span><br><span class="line">                JavaType是用来指定pojo中属性的类型</span><br><span class="line">                ofType指定的是映射到list集合属性中pojo的类型。</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;select id=<span class="string">"getTeacher"</span> resultMap=<span class="string">"TeacherStudent"</span>&gt;</span><br><span class="line">        select s.id sid, s.name sname , t.name tname, t.id tid</span><br><span class="line">        from student s,teacher t</span><br><span class="line">        <span class="built_in">where</span> s.tid = t.id and t.id=<span class="comment">#&#123;id&#125;</span></span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;resultMap id=<span class="string">"TeacherStudent"</span> <span class="built_in">type</span>=<span class="string">"Teacher"</span>&gt;</span><br><span class="line">        &lt;result  property=<span class="string">"name"</span> column=<span class="string">"tname"</span>/&gt;</span><br><span class="line">        &lt;collection property=<span class="string">"students"</span> ofType=<span class="string">"Student"</span>&gt;</span><br><span class="line">            &lt;result property=<span class="string">"id"</span> column=<span class="string">"sid"</span> /&gt;</span><br><span class="line">            &lt;result property=<span class="string">"name"</span> column=<span class="string">"sname"</span> /&gt;</span><br><span class="line">            &lt;result property=<span class="string">"tid"</span> column=<span class="string">"tid"</span> /&gt;</span><br><span class="line">        &lt;/collection&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<p>3.将Mapper文件注册到MyBatis-config文件中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;mappers&gt;</span><br><span class="line">    &lt;mapper resource=<span class="string">"mapper/TeacherMapper.xml"</span>/&gt;</span><br><span class="line">&lt;/mappers&gt;</span><br></pre></td></tr></table></figure>

<p>4.测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void <span class="function"><span class="title">testGetTeacher</span></span>()&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    TeacherMapper mapper = session.getMapper(TeacherMapper.class);</span><br><span class="line">    Teacher teacher = mapper.getTeacher(1);</span><br><span class="line">    System.out.println(teacher.getName());</span><br><span class="line">    System.out.println(teacher.getStudents());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="anchaxun2">按查询嵌套处理</h3>
1.TeacherMapper接口编写方法

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public Teacher getTeacher2(int id);</span><br></pre></td></tr></table></figure>

<p>2.编写接口对应的Mapper配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;select id=<span class="string">"getTeacher2"</span> resultMap=<span class="string">"TeacherStudent2"</span>&gt;</span><br><span class="line">  select * from teacher <span class="built_in">where</span> id = <span class="comment">#&#123;id&#125;</span></span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;resultMap id=<span class="string">"TeacherStudent2"</span> <span class="built_in">type</span>=<span class="string">"Teacher"</span>&gt;</span><br><span class="line">    &lt;!--column是一对多的外键 , 写的是一的主键的列名--&gt;</span><br><span class="line">    &lt;collection property=<span class="string">"students"</span> javaType=<span class="string">"ArrayList"</span> ofType=<span class="string">"Student"</span> column=<span class="string">"id"</span> select=<span class="string">"getStudentByTeacherId"</span>/&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br><span class="line">&lt;select id=<span class="string">"getStudentByTeacherId"</span> resultType=<span class="string">"Student"</span>&gt;</span><br><span class="line">    select * from student <span class="built_in">where</span> tid = <span class="comment">#&#123;id&#125;</span></span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>

<p>3.将Mapper文件注册到MyBatis-config文件中<br>4.测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void <span class="function"><span class="title">testGetTeacher2</span></span>()&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    TeacherMapper mapper = session.getMapper(TeacherMapper.class);</span><br><span class="line">    Teacher teacher = mapper.getTeacher2(1);</span><br><span class="line">    System.out.println(teacher.getName());</span><br><span class="line">    System.out.println(teacher.getStudents());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="xiaojie2">小结</h3>
1.关联-association
2.集合-collection
3.所以association是用于一对一和多对一，而collection是用于一对多的关系
4.JavaType和ofType都是用来指定对象类型的

<p>● JavaType是用来指定pojo中属性的类型<br>● ofType指定的是映射到list集合属性中pojo的类型。<br><b>注意说明：</b></p>
<p>1.保证SQL的可读性，尽量通俗易懂<br>2.根据实际要求，尽量编写性能更高的SQL语句<br>3.注意属性名和字段不一致的问题<br>4.注意一对多和多对一 中：字段和属性对应的问题<br>5.尽量使用Log4j，通过日志来查看自己的错误</p>
]]></content>
      <tags>
        <tag>Mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis简介及第一个程序</title>
    <url>/2020/03/15/Mybatis%E7%AE%80%E4%BB%8B%E5%8F%8A%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p>环境说明：</p>
<p>jdk 8 +<br>MySQL 5.7.19<br>maven-3.6.0<br>IDEA<br>学习前需要掌握：</p>
<p>JDBC<br>MySQL<br>Java 基础<br>Maven<br>Junit</p>
<h3>什么是MyBatis</h3>
MyBatis 是一款优秀的持久层框架
MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集的过程
MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 实体类 【Plain Old Java Objects,普通的 Java对象】映射成数据库中的记录。
MyBatis 本是apache的一个开源项目ibatis, 2010年这个项目由apache 迁移到了google code，并且改名为MyBatis 。
2013年11月迁移到Github .
Mybatis官方文档 : http://www.mybatis.org/mybatis-3/zh/index.html
GitHub : https://github.com/mybatis/mybatis-3
<a id="more"></a>
<h3>持久化</h3>>
持久化是将程序数据在持久状态和瞬时状态间转换的机制。

<p>即把数据（如内存中的对象）保存到可永久保存的存储设备中（如磁盘）。持久化的主要应用是将内存中的对象存储在数据库中，或者存储在磁盘文件中、XML数据文件中等等。<br>JDBC就是一种持久化机制。文件IO也是一种持久化机制。<br>在生活中 : 将鲜肉冷藏，吃的时候再解冻的方法也是。将水果做成罐头的方法也是。<br>为什么需要持久化服务呢？那是由于内存本身的缺陷引起的</p>
<p>内存断电后数据会丢失，但有一些对象是无论如何都不能丢失的，比如银行账号等，遗憾的是，人们还无法保证内存永不掉电。<br>内存过于昂贵，与硬盘、光盘等外存相比，内存的价格要高2~3个数量级，而且维持成本也高，至少需要一直供电吧。所以即使对象不需要永久保存，也会因为内存的容量限制不能一直呆在内存中，需要持久化来缓存到外存。</p>
<h3>持久层</h3>>
什么是持久层？

<p>完成持久化工作的代码块 . —-&gt; dao层 【DAO (Data Access Object) 数据访问对象】<br>大多数情况下特别是企业级应用，数据持久化往往也就意味着将内存中的数据保存到磁盘上加以固化，而持久化的实现过程则大多通过各种关系数据库来完成。<br>不过这里有一个字需要特别强调，也就是所谓的“层”。对于应用系统而言，数据持久功能大多是必不可少的组成部分。也就是说，我们的系统中，已经天然的具备了“持久层”概念？也许是，但也许实际情况并非如此。之所以要独立出一个“持久层”的概念,而不是“持久模块”，“持久单元”，也就意味着，我们的系统架构中，应该有一个相对独立的逻辑层面，专著于数据持久化逻辑的实现.<br>与系统其他部分相对而言，这个层面应该具有一个较为清晰和严格的逻辑边界。 【说白了就是用来操作数据库存在的！】</p>
<h3>为什么需要Mybatis</h3>
Mybatis就是帮助程序猿将数据存入数据库中 , 和从数据库中取数据 .
传统的jdbc操作 , 有很多重复代码块 .比如 : 数据取出时的封装 , 数据库的建立连接等等... , 通过框架可以减少重复代码,提高开发效率 .
MyBatis 是一个半自动化的ORM框架 (Object Relationship Mapping) -->对象关系映射
所有的事情，不用Mybatis依旧可以做到，只是用了它，所有实现会更加简单！技术没有高低之分，只有使用这个技术的人有高低之别
MyBatis的优点

<p>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件就可以了，易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。<br>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。 sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。<br>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。<br>提供xml标签，支持编写动态sql。<br>…….<br>最重要的一点，使用的人多！公司需要！</p>
<h2>MyBatis第一个程序</h2>
思路流程：搭建环境-->导入Mybatis--->编写代码--->测试
1.搭建实验数据库

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE `mybatis`;</span><br><span class="line"></span><br><span class="line">USE `mybatis`;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `user`;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `user` (</span><br><span class="line">  `id` int(20) NOT NULL,</span><br><span class="line">  `name` varchar(30) DEFAULT NULL,</span><br><span class="line">  `<span class="built_in">pwd</span>` varchar(30) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">insert  into `user`(`id`,`name`,`<span class="built_in">pwd</span>`) values (1,<span class="string">'狂神'</span>,<span class="string">'123456'</span>),(2,<span class="string">'张三'</span>,<span class="string">'abcdef'</span>),(3,<span class="string">'李四'</span>,<span class="string">'987654'</span>);</span><br></pre></td></tr></table></figure>

<p>2.导入MyBatis相关jar 包<br>mysql注意自己的版本，5版本和8版本和自己的版本不一致会报错</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.5.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;8.0.18&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>3.编写MyBatis核心配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;environments default=<span class="string">"development"</span>&gt;</span><br><span class="line">        &lt;environment id=<span class="string">"development"</span>&gt;</span><br><span class="line">            &lt;transactionManager <span class="built_in">type</span>=<span class="string">"JDBC"</span>/&gt;</span><br><span class="line">            &lt;dataSource <span class="built_in">type</span>=<span class="string">"POOLED"</span>&gt;</span><br><span class="line">                &lt;property name=<span class="string">"driver"</span> value=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span><br><span class="line">                &lt;property name=<span class="string">"url"</span> value=<span class="string">"jdbc:mysql://localhost:3306/mybatis?useSSL=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8&amp;amp;serverTimezone=UTC&amp;amp;autoReconnect=true&amp;amp;failOverReadOnly=false"</span>/&gt;</span><br><span class="line">                &lt;property name=<span class="string">"username"</span> value=<span class="string">"root"</span>/&gt;</span><br><span class="line">                &lt;property name=<span class="string">"password"</span> value=<span class="string">"123456"</span>/&gt;</span><br><span class="line">            &lt;/dataSource&gt;</span><br><span class="line">        &lt;/environment&gt;</span><br><span class="line">    &lt;/environments&gt;</span><br><span class="line">    &lt;mappers&gt;</span><br><span class="line">        &lt;mapper resource=<span class="string">"com/kuang/dao/userMapper.xml"</span>/&gt;</span><br><span class="line">    &lt;/mappers&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<p>连接数据库<br><img src="/images/innerimage/MybatisImage/315001.png" alt="cg"><br><img src="/images/innerimage/MybatisImage/315002.png" alt="cg"><br>4.编写MyBatis工具类</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import org.apache.ibatis.io.Resources;</span><br><span class="line">import org.apache.ibatis.session.SqlSession;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line">public class MybatisUtils &#123;</span><br><span class="line"></span><br><span class="line">    private static SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    static &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            String resource = <span class="string">"mybatis-config.xml"</span>;</span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //获取SqlSession连接</span><br><span class="line">    public static SqlSession <span class="function"><span class="title">getSession</span></span>()&#123;</span><br><span class="line">        <span class="built_in">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.创建实体类</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public class User &#123;</span><br><span class="line">    </span><br><span class="line">    private int id;  //id</span><br><span class="line">    private String name;   //姓名</span><br><span class="line">    private String <span class="built_in">pwd</span>;   //密码</span><br><span class="line">    </span><br><span class="line">    //构造,有参,无参</span><br><span class="line">    //<span class="built_in">set</span>/get</span><br><span class="line">    //toString()</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>6.编写Mapper接口类</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import com.kuang.pojo.User;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public interface UserMapper &#123;</span><br><span class="line">    List&lt;User&gt; selectUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>7.编写Mapper.xml配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.kuang.dao.UserMapper"</span>&gt;</span><br><span class="line">  &lt;select id=<span class="string">"selectUser"</span> resultType=<span class="string">"com.kuang.pojo.User"</span>&gt;</span><br><span class="line">    select * from user</span><br><span class="line">  &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<p>8.编写测试类<br>junit包测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public class MyTest &#123;</span><br><span class="line">    @Test</span><br><span class="line">    public void <span class="function"><span class="title">selectUser</span></span>() &#123;</span><br><span class="line">        SqlSession session = MybatisUtils.getSession();</span><br><span class="line">        //方法一:</span><br><span class="line">        //List&lt;User&gt; users = session.selectList(<span class="string">"com.kuang.mapper.UserMapper.selectUser"</span>);</span><br><span class="line">        //方法二:</span><br><span class="line">        UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; users = mapper.selectUser();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>9.运行测试</p>
<h3>问题说明</h3>>
可能出现问题说明：Maven静态资源过滤问题

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;resource&gt;</span><br><span class="line">        &lt;directory&gt;src/main/java&lt;/directory&gt;</span><br><span class="line">        &lt;includes&gt;</span><br><span class="line">            &lt;include&gt;**/*.properties&lt;/include&gt;</span><br><span class="line">            &lt;include&gt;**/*.xml&lt;/include&gt;</span><br><span class="line">        &lt;/includes&gt;</span><br><span class="line">        &lt;filtering&gt;<span class="literal">false</span>&lt;/filtering&gt;</span><br><span class="line">    &lt;/resource&gt;</span><br><span class="line">    &lt;resource&gt;</span><br><span class="line">        &lt;directory&gt;src/main/resources&lt;/directory&gt;</span><br><span class="line">        &lt;includes&gt;</span><br><span class="line">            &lt;include&gt;**/*.properties&lt;/include&gt;</span><br><span class="line">            &lt;include&gt;**/*.xml&lt;/include&gt;</span><br><span class="line">        &lt;/includes&gt;</span><br><span class="line">        &lt;filtering&gt;<span class="literal">false</span>&lt;/filtering&gt;</span><br><span class="line">    &lt;/resource&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>HTTP500的错误001</title>
    <url>/2020/03/14/HTTP500/</url>
    <content><![CDATA[<p><img src="/images/innerimage/HttpMessageNotWritableException.png" alt="img"><br><img src="/images/innerimage/HttpMessageNotWritableException2.png" alt="img"></p>
<h2>源代码</h2>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>-spring-mvc -http-500</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫肝了12小时</title>
    <url>/2020/03/10/%E7%88%AC%E8%99%AB%E8%82%9D%E4%BA%8612%E5%B0%8F%E6%97%B6/</url>
    <content><![CDATA[<p>今天属实值得纪念为了一个爬虫从8:30肝到20:30<br>原网址：<a href="https://blog.csdn.net/qq_38898129/article/details/89576581" target="_blank" rel="noopener">https://blog.csdn.net/qq_38898129/article/details/89576581</a><br>源代码：<br>import  requests<br>import time<br>from lxml import etree<br>url = ‘<a href="http://desk.zol.com.cn/dongman/1920x1080/&#39;" target="_blank" rel="noopener">http://desk.zol.com.cn/dongman/1920x1080/&#39;</a></p>
<a id="more"></a>
<p>headers = {“Referer”:”Referer: <a href="http://desk.zol.com.cn/dongman/1920x1080/&quot;" target="_blank" rel="noopener">http://desk.zol.com.cn/dongman/1920x1080/&quot;</a>,<br>    “User-Agent”:”Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36”,}</p>
<p>resq = requests.get(url,headers = headers)</p>
<p>print(resq)</p>
<p>html = etree.HTML(resq.text)<br>srcs = html.xpath(“.//img/@src”)</p>
<p>def download_img(url):<br>    imgname = url.split(‘/‘)[-1]<br>    img = requests.get(url, headers = headers)<br>    with open(‘imgs1/‘+imgname,’wb’) as file:<br>        file.write(img.content)<br>        print(url, imgname)</p>
<p>def next_page(url):<br>    res = requests.get(url, headers = headers)<br>    html = etree.HTML(res.text)<br>    srcs = html.xpath(“.//img/@src”)<br>    for i in srcs:<br>        download_img(i)<br>    next_page_link = html.xpath(‘.//a[@id=”pageNext”]/@href’)<br>    return next_page_link</p>
<p>def main():<br>    current_page = 1<br>    next_page_base = ‘<a href="http://desk.zol.com.cn/dongman/1920x1080/&#39;" target="_blank" rel="noopener">http://desk.zol.com.cn/dongman/1920x1080/&#39;</a><br>    next_page_link = html.xpath(‘.//a[@id=”pageNext”]/@href’)<br>    while next_page_link:<br>        current_page=current_page + 1<br>        next_page_link = next_page(next_page_base+str(current_page)+’.html’)<br>        if current_page &gt; 10:<br>            break</p>
<p>if <strong>name</strong> == ‘<strong>main</strong>‘:<br>    main()</p>
<p>本来是比较高质量且通俗易懂的代码了，奈何老师给你整个比你岁数都大的网址，我吐了<br>网址：<a href="http://video.sina.com.cn/movie/category/movie/type/1.html" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/1.html</a><br>肝后代码：<br>import  requests<br>import time<br>from lxml import etree<br>url = ‘<a href="http://video.sina.com.cn/movie/category/movie/type/1.html&#39;" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/1.html&#39;</a></p>
<p>url = ‘<a href="http://video.sina.com.cn/movie/category/movie/type/1.html&#39;" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/1.html&#39;</a><br>headers = {“Referer”: “<a href="http://video.sina.com.cn/movie/category/movie/type/1.html&quot;" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/1.html&quot;</a>,<br>           “User-Agent”: “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.108 Safari/“}<br>resq = requests.get(url,headers = headers)</p>
<p>print(resq)</p>
<p>html = etree.HTML(resq.text)<br>srcs = html.xpath(“//img[@onerror]/@src”)</p>
<p>print(srcs)<br>def download_img(url):<br>    imgname = url.split(‘/‘)[-1]<br>    img = requests.get(url, headers = headers)<br>    with open(‘imgs/‘+imgname,’wb’) as file:<br>        file.write(img.content)<br>        print(url, imgname)</p>
<p>def next_page(url):<br>    res = requests.get(url, headers = headers)<br>    html = etree.HTML(res.text)<br>    srcs = html.xpath(“//img[@onerror]/@src”)<br>    for i in srcs:<br>        download_img(i)<br>    next_page_link = html.xpath(“//img[@onerror]/@src”)<br>    return next_page_link</p>
<p>def main():<br>    current_page = 1<br>    next_page_base = ‘<a href="http://video.sina.com.cn/movie/category/movie/type/&#39;" target="_blank" rel="noopener">http://video.sina.com.cn/movie/category/movie/type/&#39;</a><br>    next_page_link = next_page_base+str(current_page)+’.html’<br>    print(next_page_link)<br>    while next_page_link:<br>        current_page=current_page + 1<br>        next_page_link = next_page(next_page_base+str(current_page)+’.html’)<br>        print(next_page_link)<br>        print(‘xxxxxxxxxxxxxxxxxxxxxxxxxxxxx’)</p>
<p>if <strong>name</strong> == ‘<strong>main</strong>‘:<br>    main()</p>
<p>完结，撒花<br><img src="/images/%E7%88%AC%E8%99%AB.png" alt="cg"></p>
]]></content>
      <tags>
        <tag>-肝 -Python</tag>
      </tags>
  </entry>
  <entry>
    <title>音乐鉴赏环节</title>
    <url>/2020/03/06/%E9%9F%B3%E4%B9%90%E9%89%B4%E8%B5%8F%E7%8E%AF%E8%8A%82/</url>
    <content><![CDATA[<p>卫庄赤练撒糖</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=525258051&auto=0&height=66"></iframe>]]></content>
  </entry>
  <entry>
    <title>爱情公寓5机密档案</title>
    <url>/2020/03/06/%E7%88%B1%E6%83%85%E5%85%AC%E5%AF%935%E6%9C%BA%E5%AF%86%E6%A1%A3%E6%A1%88/</url>
    <content><![CDATA[<p>彩蛋在此</p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=1" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>
<a id="more"></a>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=2" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=3" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=4" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=5" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=6" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=7" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=8" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=9" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=10" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=11" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=12" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=13" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=14" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=15" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=16" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=17" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=18" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe 
src="//player.bilibili.com/player.html?aid=89027928&cid=152069234&page=19" scrolling="no" border="0" 
frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
  </entry>
  <entry>
    <title>成果也是诸葛大力</title>
    <url>/2020/03/04/%E6%88%90%E6%9E%9C%E4%B9%9F%E6%98%AF%E8%AF%B8%E8%91%9B%E5%A4%A7%E5%8A%9B/</url>
    <content><![CDATA[<p>还是得用Markdown的语法插入图片啊</p>
<p><img src="/images/guoguo.jpg" alt="cg"></p>
<p>再插入一张<br><img src="/images/guoguo2.jpg" alt="cg"></p>
<p>下次发横屏</p>
<p>想到一个办法<br><img src="/images/guoguo4.jpg" alt="cg"></p>
]]></content>
      <categories>
        <category>-银河 -太阳系 -地球</category>
      </categories>
      <tags>
        <tag>-女神 -演员 -爱情公寓5</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
